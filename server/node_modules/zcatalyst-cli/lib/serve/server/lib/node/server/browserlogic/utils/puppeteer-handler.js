import DEFERED_PROMISE from './deferred_promise.js';
import { createRequire } from 'module';

const require = createRequire(import.meta.url);

const puppeteer = require('puppeteer-core');

/**
 * @author eraianbu-5628
 * 
 */

let browser;
let browserlaunching = false;
let browserPromise = new DEFERED_PROMISE();

const CHROME_EXECUTABLE_PATH = process.env.CHROME_EXECUTABLE_PATH || "/usr/bin/google-chrome";

async function getBrowser(path) {
    if ((!browser || !browser.isConnected()) && !browserlaunching) {
        browserPromise = new DEFERED_PROMISE();
        browserlaunching = true;
        let args = ['--remote-debugging-port=9002'];// No I18N
        browser = await puppeteer.launch({ executablePath: CHROME_EXECUTABLE_PATH, args: args, headless: true });
        let version = await browser.version();
        console.log("Chrome started successfully " + version);
        browserPromise.resolve()
        browserlaunching = false;
    }
    return browserPromise.then(async () => {
        return browser;
    })
}

export default {getBrowser}
