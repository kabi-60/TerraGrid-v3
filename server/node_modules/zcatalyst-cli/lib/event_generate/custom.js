'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ansi_colors_1 = require("ansi-colors");
const error_1 = __importDefault(require("../error"));
const constants_1 = require("../util_modules/constants");
const js_1 = require("../util_modules/js");
const option_1 = require("../util_modules/option");
exports.default = (eventJson, options = {}) => __awaiter(void 0, void 0, void 0, function* () {
    let data = options.payload;
    if (data === undefined) {
        data = js_1.JS.randomString(15);
    }
    eventJson = eventJson.replace(new RegExp(constants_1.PLACEHOLDER.event_data.data, 'g'), JSON.stringify(data));
    const ruleId = (0, option_1.getOptionValue)('ruleId', false);
    if (!ruleId) {
        throw new error_1.default('no rule-id provided', {
            exit: 1,
            errorId: 'CUSTOM-1',
            arg: [(0, ansi_colors_1.bold)('-rid'), (0, ansi_colors_1.bold)('--rule-id')]
        });
    }
    eventJson = eventJson.replace(new RegExp(constants_1.PLACEHOLDER.event_data.source_id, 'g'), 'NULL');
    return eventJson.replace(new RegExp(constants_1.PLACEHOLDER.event_data.rule_id, 'g'), ruleId);
});
