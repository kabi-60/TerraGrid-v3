'use strict';
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ansi_colors_1 = require("ansi-colors");
const command_1 = __importDefault(require("../internal/command"));
const config_1 = require("../util_modules/config");
const constants_1 = require("../util_modules/constants");
const logger_1 = require("../util_modules/logger");
exports.default = new command_1.default('run-script [command]')
    .alias('run')
    .description('Run a particular command script defined in catalyst.json')
    .needs('auth')
    .needs('config')
    .needs('rc', { optional: true, resolveOnNotFound: true })
    .action((commandName) => __awaiter(void 0, void 0, void 0, function* () {
    const config = {
        client: config_1.clientConfig,
        functions: config_1.functionsConfig
    };
    if (commandName !== undefined) {
        return (yield Promise.resolve().then(() => __importStar(require('../execute-script')))).default(commandName);
    }
    Object.keys(config).forEach((key) => {
        const lifeCycleScripts = [];
        const otherScripts = [];
        const scripts = config[key].script();
        Object.keys(scripts).forEach((scriptExe) => {
            const scriptName = scripts[scriptExe];
            if (constants_1.DEFAULT.scripts.indexOf(scriptName) > -1) {
                lifeCycleScripts.push(`  ${scriptName}\n    ${scriptExe}`);
            }
            else {
                otherScripts.push(`  ${scriptName}\n    ${scriptExe}`);
            }
        });
        if (lifeCycleScripts.length !== 0) {
            (0, logger_1.info)(`Lifecycle scripts for ${(0, ansi_colors_1.cyan)(key)} :`);
            (0, logger_1.info)(lifeCycleScripts.join(','));
            (0, logger_1.info)();
        }
        if (otherScripts.length !== 0) {
            (0, logger_1.info)(`Other scripts for ${(0, ansi_colors_1.cyan)(key)} :`);
            (0, logger_1.info)(otherScripts.join('\n'));
            (0, logger_1.info)();
        }
    });
    (0, logger_1.info)('To run a specific script, execute ' + (0, ansi_colors_1.bold)('catalyst run [feature:script]'));
    (0, logger_1.info)('For example ' + (0, ansi_colors_1.bold)('catalyst run functions:predeploy'));
    return;
}));
