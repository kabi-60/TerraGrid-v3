"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../../deploy/features/appsail/utils");
const command_1 = __importDefault(require("../../internal/command"));
const constants_1 = require("../../util_modules/constants");
const logger_1 = require("../../util_modules/logger");
exports.default = new command_1.default('appsail')
    .description('Deploy your Catalyst AppSail service to Catalyst Development environment')
    .option('--name <name>', 'Please specify a name for your AppSail')
    .option('--build-path <path>', 'Specify the AppSail build path')
    .option('--stack <stack>', 'Specify the AppSail stack')
    .option('--platform <javase|war>', 'Specify the AppSail platform for java stack')
    .option('--command <command>', 'Specify the AppSail startup command')
    .needs('auth', [constants_1.SCOPE.appsail_update])
    .needs('config', { optional: true })
    .needs('rc', { optional: true })
    .action(() => __awaiter(void 0, void 0, void 0, function* () {
    yield (yield Promise.resolve().then(() => __importStar(require('../../deploy')))).default('appsail');
    const deployTargets = (0, utils_1.urlLogger)();
    (0, logger_1.info)();
    if (deployTargets.length === 0) {
        (0, logger_1.error)('AppSail Deploy failed');
    }
    else {
        (0, logger_1.success)('Catalyst AppSail Deploy completed successfully');
    }
}));
