"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.addDependency = exports.clientNamePrompt = exports.directoryOverridePrompt = exports.fillClientInitPayload = void 0;
const ansi_colors_1 = require("ansi-colors");
const runtime_store_js_1 = __importDefault(require("../../runtime-store.js"));
const error_js_1 = __importDefault(require("../../error.js"));
const index_js_1 = __importDefault(require("../../prompt/index.js"));
const regex_js_1 = __importDefault(require("../../util_modules/constants/lib/regex.js"));
const ASYNC = __importStar(require("../../util_modules/fs/lib/async.js"));
const logger_js_1 = require("../../util_modules/logger.js");
const js_js_1 = require("../../util_modules/js.js");
const fillClientInitPayload = (source, name) => {
    runtime_store_js_1.default.set('payload.client.source', source);
    runtime_store_js_1.default.set('payload.client.name', name);
};
exports.fillClientInitPayload = fillClientInitPayload;
function directoryOverridePrompt(dir) {
    return __awaiter(this, void 0, void 0, function* () {
        const foldeExists = yield ASYNC.dirExists(dir);
        if (foldeExists) {
            const overwriteAns = yield index_js_1.default.ask(index_js_1.default.question('overwrite', 'Directory ' + (0, ansi_colors_1.underline)(dir) + ' already exists. Overwrite ?', {
                type: 'confirm',
                defaultAns: false
            }));
            if (!overwriteAns.overwrite) {
                throw new error_js_1.default('Skipping client setup since unable to override the already existing client', { exit: 0, errorId: 'CLIENT-UTILS-6', arg: [ansi_colors_1.italic.red(dir)] });
            }
            yield ASYNC.deleteDir(dir);
        }
    });
}
exports.directoryOverridePrompt = directoryOverridePrompt;
function clientNamePrompt(question, defaultAns) {
    return __awaiter(this, void 0, void 0, function* () {
        const namePrompt = yield index_js_1.default.ask(index_js_1.default.question('name', question, {
            type: 'input',
            defaultAns,
            validate: (ans) => {
                if (ans.match(regex_js_1.default.client.package_name)) {
                    return true;
                }
                return 'Invalid client name';
            }
        }));
        return namePrompt.name;
    });
}
exports.clientNamePrompt = clientNamePrompt;
function addDependency(filePath, dep, { dev = false, depPath = [] } = {}) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const packageJson = yield ASYNC.readJSONFile(filePath);
            if (packageJson) {
                depPath.push(dev ? 'devDependencies' : 'dependencies');
                js_js_1.JS.assign(dep, js_js_1.JS.get(packageJson, depPath));
                js_js_1.JS.set(packageJson, depPath, dep);
                yield ASYNC.writeJSONFile(filePath, packageJson);
            }
        }
        catch (e) {
            const err = error_js_1.default.getErrorInstance(e, { skipHelp: true });
            (0, logger_js_1.debug)(`unable to write to ${filePath}: ${err.message}`);
        }
    });
}
exports.addDependency = addDependency;
