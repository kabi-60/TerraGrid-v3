'use strict';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ansi_colors_1 = require("ansi-colors");
const error_1 = __importDefault(require("../error"));
const runtime_store_1 = __importDefault(require("../runtime-store"));
const js_1 = require("../util_modules/js");
const logger_1 = require("../util_modules/logger");
const features_1 = __importDefault(require("./features"));
function pull() {
    return __awaiter(this, void 0, void 0, function* () {
        const featureList = runtime_store_1.default.get('context.features', null);
        if (featureList === null || featureList.length === 0) {
            return;
        }
        const feature = featureList.shift();
        if (!Object.keys(features_1.default).includes(feature)) {
            throw new error_1.default('invalid feature for pull', {
                exit: 1,
                errorId: 'PULL-1',
                arg: [
                    ansi_colors_1.bold.red(feature),
                    (0, ansi_colors_1.bold)(Object.keys(features_1.default)
                        .map((feat) => '* ' + feat)
                        .join('\n'))
                ]
            });
        }
        const MODULE = features_1.default[feature];
        (0, logger_1.info)((0, ansi_colors_1.bold)('\n' + (0, ansi_colors_1.white)('===> ') + js_1.JS.capitalize(feature) + ' Setup'));
        yield MODULE().catch((err) => {
            (0, logger_1.info)();
            (0, logger_1.warning)(`Skipping pull of ${feature}. Since ${err.message}.\nContact Catalyst Support with catalyst-debug.log file.`);
        });
        if (runtime_store_1.default.get('payload.' + feature, false)) {
            runtime_store_1.default.set('payload.features', runtime_store_1.default.get('payload.features', []).concat(feature));
        }
        return pull();
    });
}
exports.default = pull;
